on:
  workflow_call:
    inputs:
      nextVersion:
        description: 'Next development version without "SNAPSHOT". If not provided, the next version will be calculated from the pom'
        required: false
        type: string
      buildDir:
        description: 'Maven build directory. Default is current dir.'
        required: false
        type: string
      depProperty:
        description: 'New release version to be used on this property'
        required: false
        type: string
      depDirectory:
        description: 'Directory for pom.xml containing the dependency'
        required: false
        type: string
      tag:
        description: 'release tag'
        required: true
        type: string

jobs:
  post-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 5
          ref: ${{ inputs.tag }}

      - name: Configure GIT
        run: |
          git config --global user.name 'Gluon Bot'
          git config --global user.email 'gluon-bot@users.noreply.github.com'

      - name: Setup Java and Apache Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Create GitHub release
        if: steps.deploy.outputs.exit_code == 0
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          tag_name: ${{ inputs.tag }}

      - name: Commit next development version
        if: steps.deploy.outputs.exit_code == 0
        run: |
          if [ -z "$BUILD_DIR" ]; then
            BUILD_DIR=.
          fi
          NEW_PROJECT_VERSION=$NEXT_VERSION
          if [ -z "$NEW_PROJECT_VERSION" ]; then
            PROJECT_VERSION=$(mvn -q help:evaluate -Dexpression=project.version -q -DforceStdout -f $BUILD_DIR)
            NEW_PROJECT_VERSION=${PROJECT_VERSION%.*}.$((${PROJECT_VERSION##*.} + 1))
          fi
          echo "Update development version to $NEW_PROJECT_VERSION"
          mvn -q versions:set -DnewVersion=$NEW_PROJECT_VERSION-SNAPSHOT -DgenerateBackupPoms=false -f $BUILD_DIR
          if [ ! -z "$DEP_PROPERTY" ] && [ ! -z "$DEP_DIR" ]; then
            mvn -q versions:set-property -Dproperty=$DEP_PROPERTY -DnewVersion=$NEW_PROJECT_VERSION-SNAPSHOT -DgenerateBackupPoms=false -f $DEP_DIR
          fi
          git add .
          git commit -m "Prepare development of $NEW_PROJECT_VERSION"
          git push https://gluon-bot:$PAT@github.com/$GITHUB_REPOSITORY HEAD:main
        shell: bash
        env:
          PAT: ${{ secrets.GITHUB_TOKEN }}
          NEXT_VERSION: ${{ inputs.nextVersion }}
          BUILD_DIR: ${{ inputs.buildDir }}
          DEP_PROPERTY: ${{ inputs.depProperty }}
          DEP_DIR: ${{ inputs.depDirectory }}
